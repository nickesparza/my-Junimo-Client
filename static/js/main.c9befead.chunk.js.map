{"version":3,"sources":["components/shared/AutoDismissAlert/AutoDismissAlert.js","components/shared/Header.js","components/shared/RequireAuth.js","components/character_profiles/MaterialPreview.js","apiConfig.js","api/inventories.js","components/character_profiles/Inventory.js","components/character_profiles/CharacterDisplay.js","components/character_profiles/CharacterDetails.js","components/shared/CloseButton.js","components/shared/CharacterForm.js","components/character_profiles/EditCharacterModal.js","api/characters.js","components/character_profiles/ProfileContainer.js","components/characters/CharacterPreview.js","components/characters/CharacterContainer.js","components/info/EditQuantityForm.js","components/info/EditQuantity.js","components/info/MaterialView.js","components/info/RecipePreview.js","components/info/RecipeList.js","components/info/RecipeView.js","components/info/InfoContainer.js","api/blueprint_materials.js","api/blueprints.js","components/UserHome.js","components/NoUserHome.js","components/Home.js","api/auth.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/characters/CreateCharacter.js","App.js","index.js","components/shared/AutoDismissAlert/messages.js"],"names":["AutoDismissAlert","props","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","Component","linkStyle","color","textDecoration","fontSize","authenticatedOptions","Nav","Link","to","style","unauthenticatedOptions","Header","user","Navbar","fixed","expand","Container","width","Brand","alt","src","height","Toggle","Collapse","RequireAuth","children","replace","MaterialPreview","inventory","setMaterialId","setRecipeListShow","setRecipeId","materialImagePath","material","material_image","padding","onClick","title","material_name","textAlign","amount","apiUrls","apiUrl","window","location","hostname","createInventory","materialId","characterId","axios","url","method","headers","Authorization","token","data","material_id","character_id","Inventory","materialPreviews","character","invUpdated","useState","setInventory","useEffect","console","log","getCharacterInventory","then","res","sort","a","b","catch","err","map","index","Row","Col","prev","alignSelf","display","flexWrap","justifyContent","overflow","CharacterDisplay","petUrlEndpoint","loveInterestName","pet_image","love_interest","petImagePath","alignItems","farm_name","horse_name","pet_type","pet_name","year","total_g","CharacterDetails","CloseButton","position","left","backgroundColor","border","CharacterForm","handleChange","handleSubmit","Form","onSubmit","Group","Label","htmlFor","Control","required","type","name","maxLength","value","placeholder","onChange","Platform","Select","defaultValue","min","max","Button","EditCharacterModal","updateCharacter","triggerRefresh","setCharacter","Modal","onHide","closeButton","Body","e","prevCharacter","target","updatedCharacter","preventDefault","parseInt","email","ProfileContainer","setCharacterId","setCharUpdated","editModalShow","setEditModalShow","updated","setUpdated","getOneCharacter","removeCharacter","deleteCharacter","fluid","md","CharacterPreview","margin","CharacterContainer","charPreviews","charUpdated","characters","setCharacters","getAllCharacters","length","EditQuantityForm","inventoryToUpdate","size","EditQuantity","setInvUpdated","setInventoryToUpdate","prevInventory","updatedInventory","inventoryId","newAmount","updateSingleInventory","MaterialView","material_description","RecipePreview","recipe","recipeImagePath","recipe_image","RecipeList","allRecipes","recipes","RecipeView","blueprint","ingredients","ingredient","maxWidth","amount_needed","paddingBottom","recipe_name","recipe_description","InfoContainer","recipeId","recipeListShow","setMaterial","recipeList","setRecipeList","setBlueprint","blueprintId","getSingleInventory","recipe_materials","blueprints","divStyle","maxHeight","overflowY","UserHome","lg","NoUserHome","Home","signIn","credentials","password","SignUp","setEmail","setPassword","passwordConfirmation","setPasswordConfirmation","navigate","useNavigate","event","msgAlert","setUser","password_confirmation","signUp","error","messages","signUpFailure","controlId","SignIn","signInFailure","SignOut","clearUser","ButtonGroup","signOut","finally","ChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","passwords","old","new","changePassword","changePasswordSuccess","changePasswordFailure","CreateCharacter","newCharacter","createCharacter","i","App","msgAlerts","setMsgAlerts","prevState","filter","msg","uuid","path","element","ReactDOM","render","ThemeProvider","breakpoints","minBreakpoint","document","getElementById","module","exports","signUpSuccess","signInSuccess","signOutSuccess"],"mappings":"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","file":"static/js/main.c9befead.chunk.js","sourcesContent":["import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nimport './AutoDismissAlert.scss'\r\n\r\nclass AutoDismissAlert extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tshow: true,\r\n\t\t}\r\n\t\tthis.timeoutId = null\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.timeoutId = setTimeout(this.handleClose, 5000)\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearTimeout(this.timeoutId)\r\n\t}\r\n\r\n\thandleClose = () => this.setState({ show: false })\r\n\r\n\trender() {\r\n\t\tconst { variant, heading, message, deleteAlert, id } = this.props\r\n\r\n\t\t// Delete this alert after the fade animation time (300 ms by default)\r\n\t\tif (!this.state.show) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdeleteAlert(id)\r\n\t\t\t}, 300)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Alert\r\n\t\t\t\tdismissible\r\n\t\t\t\tshow={this.state.show}\r\n\t\t\t\tvariant={variant}\r\n\t\t\t\tonClose={this.handleClose}>\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<Alert.Heading>{heading}</Alert.Heading>\r\n\t\t\t\t\t<p className='alert-body'>{message}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Alert>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AutoDismissAlert\r\n","import React, { Fragment } from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { Container } from 'react-bootstrap'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst linkStyle = {\r\n    color: 'black',\r\n    textDecoration: 'none',\r\n    fontSize: \"24px\"\r\n}\r\nconst authenticatedOptions = (\r\n\t<>\r\n        <Nav.Link>\r\n\t\t\t<Link to='/' style={linkStyle}>\r\n\t\t\t\tHome\r\n\t\t\t</Link>\r\n\t\t</Nav.Link>\r\n        <Nav.Link>\r\n            <Link to='/create-character' style={linkStyle}>Create</Link>\r\n        </Nav.Link>\r\n\t\t<Nav.Link>\r\n\t\t\t<Link to='change-password' style={linkStyle}>\r\n\t\t\t\tChange PW\r\n\t\t\t</Link>\r\n\t\t</Nav.Link>\r\n\t\t<Nav.Link>\r\n\t\t\t<Link to='sign-out' style={linkStyle}>\r\n\t\t\t\tExit\r\n\t\t\t</Link>\r\n\t\t</Nav.Link>\r\n\t</>\r\n)\r\n\r\nconst unauthenticatedOptions = (\r\n\t<>\r\n        <Nav.Link>\r\n\t\t    <Link to='sign-up' style={linkStyle}>New</Link>\r\n        </Nav.Link>\r\n        <Nav.Link>\r\n\t\t    <Link to='sign-in' style={linkStyle}>Sign In</Link>\r\n        </Nav.Link>\r\n\t</>\r\n)\r\n\r\nconst Header = ({ user }) => (\r\n\t<Navbar fixed='bottom' variant='light' expand='md'>\r\n        <Container  className='ui-container' style={{width: \"fit-content\"}}>\r\n            <Navbar.Brand>\r\n                <Link to='/' style={linkStyle}>\r\n                    <img\r\n                    alt=\"\"\r\n                    src=\"images/Junimo.gif\"\r\n                    width=\"50\"\r\n                    height=\"50\"\r\n                    className=\"d-inline-block align-top\"\r\n                    />\r\n                </Link>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n            <Navbar.Collapse id='basic-navbar-nav'>\r\n                <Nav className='ml-6'>\r\n                    {user ? authenticatedOptions : unauthenticatedOptions}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Container>\r\n    </Navbar>\r\n)\r\n\r\nexport default Header\r\n","import { Navigate } from 'react-router-dom'\r\n\r\nexport default function RequireAuth({ user, children }) {\r\n\r\n\treturn user !== null ? children : <Navigate to='/' replace />\r\n}\r\n","// this component will render a single material once it's hooked up\r\n// but materials ARE hooked up, why have I not done this yet...?\r\nexport const MaterialPreview = (props) => {\r\n    const {inventory, setMaterialId, setRecipeListShow, setRecipeId} = props\r\n    const materialImagePath = \"/images/materials/\" + inventory.material.material_image\r\n    return (\r\n        <div\r\n            style={{padding: \"10px\"}}\r\n            onClick={() => {\r\n                setRecipeId(null)\r\n                setRecipeListShow(false)\r\n                setMaterialId(inventory.id)\r\n            }}\r\n        >\r\n            <img title={inventory.material.material_name} alt={inventory.material.material_name} className=\"selector\" src={materialImagePath}/>\r\n            <div style={{textAlign: \"center\"}}>{inventory.amount}</div>\r\n        </div>\r\n    )\r\n}","let apiUrl\r\nconst apiUrls = {\r\n    // YOU MUST CHANGE PRODUCTION URL WHEN DEPLOYING\r\n\tproduction: 'https://my-junimo-api.herokuapp.com',\r\n\tdevelopment: 'http://localhost:8000',\r\n}\r\n\r\nif (window.location.hostname === 'localhost') {\r\n\tapiUrl = apiUrls.development\r\n} else {\r\n\tapiUrl = apiUrls.production\r\n}\r\n\r\nexport default apiUrl\r\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\n// get a a collection of inventories belonging to a character\r\nexport const getCharacterInventory = (user, characterId) => {\r\n    console.log(`getCharacterInventory route was hit for character with id ${characterId}`)\r\n    return axios({\r\n\t\turl: apiUrl + `/inventory/${characterId}`,\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Token ${user.token}`,\r\n\t\t},\r\n\t})\r\n}\r\n\r\n// get a single entry in an inventory belonging to a character\r\nexport const getSingleInventory = (user, characterId, inventoryId) => {\r\n    console.log(`getSingleInventory route was hit for character with id ${characterId} and inventory id ${inventoryId}`)\r\n    return axios({\r\n\t\turl: apiUrl + `/inventory/${inventoryId}/${characterId}`,\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Token ${user.token}`,\r\n\t\t},\r\n\t})\r\n}\r\n\r\n// create inventory\r\nexport const createInventory = (user, materialId, characterId) => {\r\n    // console.log(`createInventory route was hit for character with id ${characterId}, for material with id ${materialId}`)\r\n    return axios({\r\n\t\turl: apiUrl + `/inventory/create/${characterId}`,\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Token ${user.token}`,\r\n\t\t},\r\n        data: {\r\n            material_id: materialId,\r\n            character_id: characterId,\r\n            amount: 0\r\n        },\r\n\t})\r\n}\r\n\r\nexport const updateSingleInventory = (user, materialId, characterId, inventoryId, newAmount) => {\r\n    console.log(`editOneInventory route was hit for inventory id ${inventoryId} belonging to character id ${characterId}`)\r\n    return axios({\r\n\t\turl: apiUrl + `/inventory/edit/${inventoryId}/${characterId}`,\r\n\t\tmethod: 'PATCH',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Token ${user.token}`,\r\n\t\t},\r\n        data: {\r\n                material_id: materialId,\r\n                character_id: characterId,\r\n                amount: newAmount\r\n        },\r\n\t})\r\n}","// this component fetches the character's inventory and displays it\r\n// still a work in progress, what SHOULD happen eventually is that every material shows up with a quantity of 0\r\n// user can click a resource and then add a new quantity in the info pane\r\n// will need to be passed the invUpdated prop from UserHome to trigger the refresh\r\nimport { useEffect, useState } from \"react\"\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { MaterialPreview } from \"./MaterialPreview\"\r\nimport { getCharacterInventory } from \"../../api/inventories\"\r\n\r\nexport const Inventory = (props) => {\r\n    const {user, character, invUpdated, setMaterialId, setRecipeListShow, setRecipeId} = props\r\n    const [inventory, setInventory] = useState(null)\r\n\r\n    useEffect(() => {\r\n        // this does nothing right now but will once inventory is a model we can retrieve\r\n        console.log('this is the character in inventory', character)\r\n        getCharacterInventory(user, character.id)\r\n            .then(res => {\r\n                res.data.inventory = res.data.inventory.sort((a, b) => {\r\n                    return a.material.id - b.material.id\r\n                })\r\n                return res\r\n            })\r\n            .then(res => setInventory(res.data.inventory))\r\n            .catch(err => console.log(err))\r\n        // getAllMaterials()\r\n        //     .then(res => {\r\n        //         console.log(res)\r\n        //         return res\r\n        //     })\r\n        //     .then(res => setMaterials(res.data.materials))\r\n        //     .then(console.log('these are the materials in inventory', materials))\r\n        //     .catch(err => console.log(err))\r\n    // eslint-disable-next-line\r\n    }, [character, invUpdated])\r\n\r\n    // material previews need to come from a getAllMaterials fetch\r\n    let materialPreviews\r\n    if (inventory) {\r\n        materialPreviews = inventory.map((inventory, index) => {\r\n            return <MaterialPreview key={index} inventory={inventory} setMaterialId={setMaterialId} setRecipeId={setRecipeId} setRecipeListShow={setRecipeListShow}/>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui-container m-3\">\r\n            <Row className=\"mt-3\">\r\n                <Col>\r\n                    <h3>Inventory</h3>\r\n                </Col>\r\n                <Col style={{textAlign: \"center\"}}>\r\n                    <button onClick={() => {\r\n                        setMaterialId(null)\r\n                        setRecipeId(null)\r\n                        setRecipeListShow(prev => !prev)\r\n                        }}\r\n                    style={{alignSelf: \"center\"}}>\r\n                    Show Recipes\r\n                    </button>\r\n                </Col>\r\n            </Row>\r\n            <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\", height: \"300px\", overflow: \"scroll\"}}>\r\n                {materialPreviews}\r\n            </div>\r\n        </div>\r\n    )\r\n}","// this component takes the character info, processes it, and renders all the information\r\n// including name, farm name, year, horse/pet names, images, etc.\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\nexport const CharacterDisplay = (props) => {\r\n    const character = props.character\r\n    // because of how love interests and pet images are stored in the backend (as a two-letter shorthand)\r\n    // CharacterDisplay needs to set the data coming back to a useable format for the frontend\r\n    // elongates both pet_image and love_interest to have a workable image path and a full name\r\n    let petUrlEndpoint\r\n    let loveInterestName\r\n    switch(character.pet_image) {\r\n        case 'C1':\r\n            petUrlEndpoint = \"Cat_1.png\"\r\n            break\r\n        case 'C2':\r\n            petUrlEndpoint = \"Cat_2.png\"\r\n            break\r\n        case 'C3':\r\n            petUrlEndpoint = \"Cat_3.png\"\r\n            break\r\n        case 'D1':\r\n            petUrlEndpoint = \"Dog_1.png\"\r\n            break\r\n        case 'D2':\r\n            petUrlEndpoint = \"Dog_2.png\"\r\n            break\r\n        case 'D3':\r\n            petUrlEndpoint = \"Dog_3.png\"\r\n            break\r\n        default:\r\n            petUrlEndpoint = \"Cat_1.png\"\r\n    }\r\n    switch(character.love_interest) {\r\n        case 'AL':\r\n            loveInterestName = \"Alex\"\r\n            break\r\n        case 'EL':\r\n            loveInterestName = \"Elliot\"\r\n            break\r\n        case 'HA':\r\n            loveInterestName = \"Harvey\"\r\n            break\r\n        case 'SA':\r\n            loveInterestName = \"Sam\"\r\n            break\r\n        case 'SE':\r\n            loveInterestName = \"Sebastian\"\r\n            break\r\n        case 'SH':\r\n            loveInterestName = \"Shane\"\r\n            break\r\n        case 'AB':\r\n            loveInterestName = \"Abigail\"\r\n            break\r\n        case 'EM':\r\n            loveInterestName = \"Emily\"\r\n            break\r\n        case 'HL':\r\n            loveInterestName = \"Haley\"\r\n            break\r\n        case 'LE':\r\n            loveInterestName = \"Leah\"\r\n            break\r\n        case 'MA':\r\n            loveInterestName = \"Maru\"\r\n            break\r\n        case 'PE':\r\n            loveInterestName = \"Penny\"\r\n            break\r\n        case 'KR':\r\n            loveInterestName = \"Krobus\"\r\n            break\r\n        default:\r\n            loveInterestName = \"None\"\r\n    }\r\n\r\n    const petImagePath = \"/images/petsprites/\" + petUrlEndpoint\r\n\r\n    return (\r\n        <Container>\r\n            <Row style={{alignItems: \"center\"}}>\r\n                <Col>\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <img title={character.farm_name} alt=\"\" src=\"images/Standard_Farm_Map_Icon.png\"/>\r\n                        <div>{character.farm_name}</div>\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <img title=\"Horse!\" alt=\"\" src=\"/images/petsprites/Horse.png\"/>\r\n                        <p>{character.horse_name}</p>\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div title={character.pet_type} style={{textAlign: \"center\"}}>\r\n                        <img src={petImagePath} alt=\"The pet you chose\"/>\r\n                        <p>{character.pet_name}</p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <img title=\"Love Interest\" alt=\"\" src=\"images/Marriage_Icon.png\"/>\r\n                        {loveInterestName}\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <img title=\"Current Year\" alt=\"\" src=\"images/30px-Time_Icon.png\"/>\r\n                        Year {character.year}\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <img title=\"Current Funds\" alt=\"\" src=\"images/Gold.png\" style={{width: \"30px\"}}/>\r\n                        {character.total_g}g\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","// this sits inside ProfileContainer and holds everything related to the character being displayed\r\n// character info and inventory are separate components that will be updated separately\r\nimport { Inventory } from \"./Inventory\"\r\nimport { CharacterDisplay } from \"./CharacterDisplay\"\r\n\r\nexport const CharacterDetails = (props) => {\r\n    const {user, character, invUpdated, setMaterialId, setRecipeId, setRecipeListShow} = props\r\n\r\n    return (\r\n        <div>\r\n            <CharacterDisplay character={character} setMaterialId={setMaterialId} setRecipeId={setRecipeId} setRecipeListShow={setRecipeListShow}/>\r\n            <Inventory user={user} character={character} invUpdated={invUpdated} setMaterialId={setMaterialId} setRecipeId={setRecipeId} setRecipeListShow={setRecipeListShow}/>\r\n        </div>\r\n    )\r\n}","\r\nconst CloseButton = (props) => {\r\n    const {handleClose} = props\r\n\r\n    const divStyle = {\r\n        position: \"absolute\",\r\n        left: \"95%\",\r\n        backgroundColor: \"red\",\r\n        color: \"white\",\r\n        border: \"2px solid white\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui-container selector\" style={divStyle}\r\n        onClick={handleClose}>\r\n            X\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CloseButton","import { Form, Container, Button } from \"react-bootstrap\"\r\n\r\nconst CharacterForm = (props) => {\r\n    const { character, heading, handleChange, handleSubmit } = props\r\n\r\n    return (\r\n        <Container className='justify-content-center my-3'>\r\n            <h2>{heading}</h2>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor='name'>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        name='name'\r\n                        maxLength={12}\r\n                        value={character.name}\r\n                        placeholder='Enter character name'\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Form.Label htmlFor='Platform'>Platform</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        name='Platform'\r\n                        value={character.Platform}\r\n                        type='text'\r\n                        placeholder='Switch, PS4, PC, etc.'\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Form.Label htmlFor='farm_name'>Farm Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        name='farm_name'\r\n                        maxLength={12}\r\n                        value={character.farm_name}\r\n                        type='text'\r\n                        placeholder='Enter farm name'\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Form.Label htmlFor='pet_type'>Pet Type</Form.Label>\r\n                    <Form.Select\r\n                        required\r\n                        name='pet_type'\r\n                        defaultValue={character.pet_type}\r\n                        onChange={handleChange}\r\n                    >\r\n                        <option>Choose Pet Type</option>\r\n                        <option value=\"Cat\">Cat</option>\r\n                        <option value=\"Dog\">Dog</option>\r\n                    </Form.Select>\r\n                    <Form.Label htmlFor='pet_name'>Pet Name</Form.Label>\r\n                    <Form.Control\r\n                        name='pet_name'\r\n                        maxLength={12}\r\n                        value={character.pet_name}\r\n                        type='text'\r\n                        placeholder=\"Enter pet's name\"\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Form.Label htmlFor='pet_image'>Pet Image</Form.Label>\r\n                    <Form.Select\r\n                        required\r\n                        name='pet_image'\r\n                        value={character.pet_image}\r\n                        onChange={handleChange}\r\n                    >\r\n                        <option>Choose image</option>\r\n                        <option value=\"C1\">Cat 1</option>\r\n                        <option value=\"C2\">Cat 2</option>\r\n                        <option value=\"C3\">Cat 3</option>\r\n                        <option value=\"D1\">Dog 1</option>\r\n                        <option value=\"D2\">Dog 2</option>\r\n                        <option value=\"D3\">Dog 3</option>\r\n                    </Form.Select>\r\n                    <Form.Label htmlFor='love_interest'>Love Interest</Form.Label>\r\n                    <Form.Select\r\n                        name='love_interest'\r\n                        value={character.love_interest}\r\n                        onChange={handleChange}\r\n                    >\r\n                        <option>Choose love interest</option>\r\n                        <option value=\"AL\">Alex</option>\r\n                        <option value=\"EL\">Elliot</option>\r\n                        <option value=\"HA\">Harvey</option>\r\n                        <option value=\"SA\">Sam</option>\r\n                        <option value=\"SE\">Sebastian</option>\r\n                        <option value=\"SH\">Shane</option>\r\n                        <option value=\"AB\">Abigail</option>\r\n                        <option value=\"EM\">Emily</option>\r\n                        <option value=\"HL\">Haley</option>\r\n                        <option value=\"LE\">Leah</option>\r\n                        <option value=\"MA\">Maru</option>\r\n                        <option value=\"PE\">Penny</option>\r\n                        <option value=\"KR\">Krobus</option>\r\n                    </Form.Select>\r\n                    <Form.Label htmlFor='horse_name'>Horse Name</Form.Label>\r\n                    <Form.Control\r\n                        name='horse_name'\r\n                        maxLength={12}\r\n                        value={character.horse_name}\r\n                        type='text'\r\n                        placeholder='Enter horse name'\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Form.Label htmlFor='total_g'>Total Money</Form.Label>\r\n                    <Form.Control\r\n                        name='total_g'\r\n                        min={0}\r\n                        max={999999}\r\n                        value={character.total_g}\r\n                        type='number'\r\n                        placeholder='Enter total g'\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Form.Label htmlFor='year'>Year</Form.Label>\r\n                    <Form.Control\r\n                        name='year'\r\n                        value={character.year}\r\n                        type='number'\r\n                        placeholder='Enter current year'\r\n                        onChange={handleChange}\r\n                    />\r\n                </Form.Group>\r\n                <Button className=\"my-2\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CharacterForm","// this works very similarly to CreateCharacter component\r\n// but passes current character's info to the form to auto-populate it\r\nimport { useEffect, useState } from \"react\"\r\nimport { Modal } from \"react-bootstrap\"\r\nimport CharacterForm from \"../shared/CharacterForm\"\r\n\r\nconst EditCharacterModal = (props) => {\r\n    const {show, handleClose, updateCharacter, user, triggerRefresh} = props\r\n    const [character, setCharacter] = useState(props.character)\r\n\r\n    useEffect(() => {\r\n        setCharacter(props.character)\r\n    }, [props.character])\r\n\r\n    const handleChange = (e) => {\r\n        setCharacter(prevCharacter => {\r\n            let value = e.target.value\r\n            const name = e.target.name\r\n\r\n            const updatedCharacter = {\r\n                [name]: value\r\n            }\r\n\r\n            return {\r\n                ...prevCharacter,\r\n                ...updatedCharacter\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        character.total_g = parseInt(character.total_g)\r\n        character.year = parseInt(character.year)\r\n        updateCharacter(user, character)\r\n            .then(() => handleClose())\r\n            // .then(() => {\r\n            //     msgAlert({\r\n            //         heading: 'Success',\r\n            //         message: messages.editPatientSuccess,\r\n            //         variant: 'success'\r\n            //     })\r\n            // })\r\n            .then(() => triggerRefresh())\r\n            .catch(err => console.log(err))\r\n            // .catch(() => {\r\n            //     msgAlert({\r\n            //         heading: 'Error',\r\n            //         message: messages.editPatientFailure,\r\n            //         variant: 'danger'\r\n            //     })\r\n            // })\r\n    }\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton/>\r\n                <Modal.Body>\r\n                        <CharacterForm character={character} heading=\"Edit Character\" handleChange={handleChange} handleSubmit={handleSubmit}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n    )\r\n}\r\n\r\nexport default EditCharacterModal","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\n// get all characters\r\nexport const getAllCharacters = (user) => {\r\n    console.log(`getAllCharacters route was hit for ${user.email}`)\r\n    return axios({\r\n\t\turl: apiUrl + `/characters`,\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Token ${user.token}`,\r\n\t\t}\r\n\t})\r\n}\r\n\r\n// get one character\r\nexport const getOneCharacter = (user, characterId) => {\r\n    console.log(`getOneCharacter route was hit for character with ID ${characterId} belonging to ${user.email}`)\r\n    return axios({\r\n\t\turl: apiUrl + `/characters/${characterId}`,\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Token ${user.token}`,\r\n\t\t}\r\n\t})\r\n}\r\n\r\n// create a character\r\nexport const createCharacter = (user, newCharacter) => {\r\n    console.log(`createCharacter route was hit for new character ${newCharacter.name} belonging to user ${user.email}`)\r\n    console.log('this is the newCharacter', newCharacter)\r\n    return axios({\r\n\t\turl: apiUrl + '/characters/',\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Token ${user.token}`,\r\n\t\t},\r\n        data: {\r\n            character: newCharacter\r\n        },\r\n\t})\r\n}\r\n\r\n// update a character\r\nexport const updateCharacter = (user, updatedCharacter) => {\r\n    console.log(`updateCharacter route was hit for updated character ${updatedCharacter.name} belonging to ${user.email}`)\r\n    return axios({\r\n\t\turl: apiUrl + `/characters/${updatedCharacter.id}/`,\r\n\t\tmethod: 'PATCH',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Token ${user.token}`,\r\n\t\t},\r\n        data: {\r\n            character: updatedCharacter\r\n        },\r\n\t})\r\n}\r\n\r\n// delete a character\r\nexport const deleteCharacter = (user, characterId) => {\r\n    console.log(`deleteCharacter route was hit for character with ID ${characterId} belonging to user ${user.email}`)\r\n    return axios({\r\n\t\turl: apiUrl + `/characters/${characterId}/`,\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Token ${user.token}`,\r\n\t\t},\r\n\t})\r\n}","// this is the main container for all profile information regarding a single character\r\n// fetches one character's details and displays them, along with an inventory for that character\r\n// inventory will either be created on character creation or a CRUD resource (minus delete)\r\nimport { useEffect, useState } from \"react\"\r\nimport { CharacterDetails } from \"./CharacterDetails\"\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\"\r\nimport CloseButton from \"../shared/CloseButton\"\r\nimport EditCharacterModal from \"./EditCharacterModal\"\r\nimport { updateCharacter, deleteCharacter, getOneCharacter } from \"../../api/characters\"\r\n\r\n\r\nexport const ProfileContainer = (props) => {\r\n    // pass all state variables from UserHome to trigger rendering and refreshes\r\n    const { user, characterId, invUpdated, setCharacterId, setCharUpdated, setMaterialId, setRecipeId, setRecipeListShow } = props\r\n    \r\n    const [character, setCharacter] = useState(null)\r\n    const [editModalShow, setEditModalShow] = useState(false)\r\n    const [updated, setUpdated] = useState(false)\r\n\r\n    useEffect(() => {\r\n        console.log('useEffect ran in the ProfileContainer')\r\n        getOneCharacter(user, characterId)\r\n            .then(res => setCharacter(res.data.character))\r\n            .then(console.log('this is the character', character))\r\n            .catch(err => console.log(err))\r\n    // eslint-disable-next-line\r\n    }, [characterId, updated])\r\n\r\n    const divStyle = {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    }\r\n\r\n    // this function calls deleteCharacter and then triggers a refresh in Character Container to remove that name from the list\r\n    // also closes all currently open info panes\r\n    const removeCharacter = () => {\r\n        deleteCharacter(user, character.id)\r\n            .then(() => {\r\n                setCharacterId(null)\r\n                setMaterialId(null)\r\n                setRecipeId(null)\r\n                setRecipeListShow(false)\r\n            })\r\n            .then(setCharUpdated(prev => !prev))\r\n            .catch(err => console.log(err))\r\n    }\r\n    // if there's no character, don't render anything\r\n    if (!character) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Container fluid className=\"ui-container animated\" style={divStyle}>\r\n            <CloseButton\r\n                handleClose={() => {\r\n                    setCharacterId(null)\r\n                    setMaterialId(null)\r\n                    setRecipeId(null)\r\n                    setRecipeListShow(false)}}\r\n            />\r\n            <Row>\r\n                <Col>\r\n                    <h4>{character.name}</h4>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <CharacterDetails\r\n                    user={user}\r\n                    character={character}\r\n                    invUpdated={invUpdated}\r\n                    setCharacter={setCharacter}\r\n                    setMaterialId={setMaterialId}\r\n                    setRecipeId={setRecipeId}\r\n                    setRecipeListShow={setRecipeListShow}\r\n                />\r\n            </Row>\r\n            <Row md=\"auto\" className=\"py-2\" style={{justifyContent: \"center\"}}>\r\n                <Col fluid>\r\n                <Button variant=\"info\" onClick={() => setEditModalShow(true)}>Edit</Button>\r\n                </Col>\r\n                <Col>\r\n                <Button variant=\"danger\" onClick={() => removeCharacter()}>Delete</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        <EditCharacterModal\r\n            // modal needs character info to populate fields\r\n            character={character}\r\n            // needs user in order to validate in the backend update function\r\n            user={user}\r\n            // this sets the visibility of the modal when the relevant button is clicked\r\n            show={editModalShow}\r\n            // this is a function passed in from props that will run the patch route\r\n            updateCharacter={updateCharacter}\r\n            // this updates the state to trigger another useEffect pull of data\r\n            triggerRefresh={() => {\r\n                setUpdated(prev => !prev)\r\n                setCharUpdated(prev => !prev)\r\n            }}\r\n            // this closes the modal when the submit button is pressed\r\n            handleClose={() => {\r\n                setEditModalShow(false)\r\n            }} \r\n        />\r\n        </>\r\n    )\r\n}\r\n\r\n","// this component shows an individual character name and sets state for a fetch in Profile Container\r\nexport const CharacterPreview = (props) => {\r\n    const {character, setCharacterId, setMaterialId, setRecipeId, setRecipeListShow} = props\r\n\r\n    const divStyle = {\r\n        border: \"4px solid rgb(229,120,61)\",\r\n        backgroundColor: \"rgb(255,213,139)\",\r\n        margin: \"5px\",\r\n        padding: \"2px\"\r\n    }\r\n    \r\n    return (\r\n        <div className=\"selector\"\r\n            style={divStyle}\r\n            onClick={() => {\r\n                // on click:\r\n                // set materialId, recipeId, and recipeListShow to falsy values to remove the Info Container if it is currently displayed\r\n                // set characterId variable in UserHome, to trigger render of ProfileContainer\r\n                // console.log('this is the character', character)\r\n                setMaterialId(null)\r\n                setRecipeId(null)\r\n                setRecipeListShow(false)\r\n                setCharacterId(character.id)\r\n                }}>\r\n            <h5 style={{margin: \"0\"}}>{character.name}</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\n","// this is the parent component for the list of all a user's characters\r\nimport { Link } from \"react-router-dom\"\r\nimport { CharacterPreview } from \"./CharacterPreview\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { getAllCharacters } from \"../../api/characters\"\r\nimport { Button } from \"react-bootstrap\"\r\n\r\nconst CharacterContainer = (props) => {\r\n    // these props will show up a lot, it's how the conditional rendering of character details and recipe/material/etc details are displayed\r\n    const {user, charUpdated, setCharacterId, setMaterialId, setRecipeId, setRecipeListShow} = props\r\n    // this component fetches all characters for a given user, which is held in state\r\n    const [characters, setCharacters] = useState([])\r\n\r\n    useEffect(() => {\r\n        console.log('useEffect has run in CharacterContainer')\r\n        // get all characters belonging to a user\r\n        getAllCharacters(user)\r\n            .then(res => setCharacters(res.data.characters))\r\n            .catch(err => console.log(err))\r\n    // only re-run if a character has been updated (to get their new name, if needed)\r\n    // eslint-disable-next-line\r\n    }, [charUpdated])\r\n\r\n    // getAllCharacters returns an array of characters\r\n    // map through this array to return a preview component for each character\r\n    // this is what the user clicks on to view the full details of that character\r\n    let charPreviews\r\n    if (characters.length > 0) {\r\n        charPreviews = characters.map((character, index) => {\r\n            return <CharacterPreview\r\n                        key={index}\r\n                        character={character}\r\n                        setCharacterId={setCharacterId}\r\n                        setMaterialId={setMaterialId}\r\n                        setRecipeId={setRecipeId}\r\n                        setRecipeListShow={setRecipeListShow}\r\n                        />\r\n        })\r\n    }\r\n\r\n    const divStyle = {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    }\r\n    // check if there are any character preview components\r\n    // if there are, render them\r\n    // if not, show that there are none\r\n    // and always show a button that routes to the create page\r\n    return (\r\n        <div className=\"ui-container\" style={divStyle}>\r\n            <h4>{user.email}'s Characters</h4>\r\n            {\r\n                characters.length > 0 ? charPreviews : <p style={{textAlign: \"center\"}}>No characters yet!</p>\r\n            }\r\n            <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                <Link to=\"/create-character\"><Button variant=\"success\">Add Character</Button></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterContainer","import { Form, Button } from 'react-bootstrap'\r\n\r\nconst EditQuantityForm = (props) => {\r\n    const { inventoryToUpdate, handleChange, handleSubmit } = props\r\n    console.log('this is the inventory to update in the form', inventoryToUpdate)\r\n    console.log('this is the amount going into the form', inventoryToUpdate.amount)\r\n\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor='amount'>Quantity</Form.Label>\r\n                    <Form.Control\r\n                        type='number'\r\n                        name='amount'\r\n                        defaultValue={inventoryToUpdate.amount}\r\n                        key={inventoryToUpdate.amount}\r\n                        placeholder='Enter amount'\r\n                        onChange={handleChange}\r\n                    />\r\n                </Form.Group>\r\n                <Button className='m-2' variant='primary' size='sm' type='submit'>Edit Amount</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditQuantityForm","import { useEffect, useState } from 'react'\r\nimport EditQuantityForm from './EditQuantityForm'\r\nimport { updateSingleInventory } from '../../api/inventories'\r\n\r\nconst EditQuantity = (props) => {\r\n    const { user, inventory, characterId, setInvUpdated } = props\r\n    const [inventoryToUpdate, setInventoryToUpdate] = useState(inventory)\r\n    console.log('this is the inventory in EditQuantity', inventory)\r\n\r\n    useEffect(() => {\r\n        console.log('useEffect ran in EditQuantity')\r\n        setInventoryToUpdate(inventory)\r\n    }, [inventory])\r\n    \r\n    const handleChange = (e) => {\r\n        setInventoryToUpdate(prevInventory => {\r\n            let value = e.target.value\r\n            const name = e.target.name\r\n\r\n            const updatedInventory = {\r\n                [name]: parseInt(value)\r\n            }\r\n\r\n            return {\r\n                ...prevInventory,\r\n                ...updatedInventory\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log('this is the amount we submit', parseInt(inventory.amount))\r\n        updateSingleInventory(user, inventory.material.id, characterId, inventory.id, inventoryToUpdate.amount)\r\n            .then(() => setInvUpdated(prev => !prev))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <EditQuantityForm inventoryToUpdate={inventoryToUpdate} handleChange={handleChange} handleSubmit={handleSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditQuantity","// this component shows one material based on the fetch from InfoContainer\r\nimport EditQuantity from \"./EditQuantity\"\r\nconst MaterialView = (props) => {\r\n    const { user, inventory, characterId, setInvUpdated } = props\r\n    console.log('material in MaterialView', inventory)\r\n\r\n    // useEffect(() => {\r\n    //     console.log('useEffect ran in MaterialView', inventory)\r\n    // }, [inventory])\r\n\r\n    const materialImagePath = '/images/materials/' + inventory.material.material_image\r\n    return (\r\n        <>\r\n            <div style={{margin:\"5px\", textAlign: \"center\"}}>\r\n                <h2>{inventory.material.material_name}</h2>\r\n                <div className=\"my-3\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                <div className=\"ui-container\" style={{display: \"inline-block\"}}>\r\n                <img src={materialImagePath} alt={inventory.material.material_name}/>\r\n                </div>\r\n                </div>\r\n                <div>{inventory.material.material_description}</div>\r\n                <div>You have {inventory.amount}.</div>\r\n            </div>\r\n            <div>\r\n                <EditQuantity user={user} inventory={inventory} characterId={characterId} setInvUpdated={setInvUpdated}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MaterialView","// component that loads a single recipe image inside of the RecipeList component\r\nconst RecipePreview = (props) => {\r\n    const {recipe, setMaterialId, setRecipeId, setRecipeListShow} = props\r\n    // set image path to the recipe's recipe_image field\r\n    const recipeImagePath = \"images/recipes/\" + recipe.recipe_image\r\n    // console.log(recipeImagePath)\r\n    // console.log(recipeImagePath)\r\n    return (\r\n        <div style={{margin: \"2px\"}}\r\n        onClick={() => {\r\n                setRecipeId(recipe.id)\r\n                setMaterialId(null)\r\n                setRecipeListShow(false)\r\n            }}\r\n        >\r\n            <img className=\"selector\" src={recipeImagePath} alt={recipeImagePath}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipePreview","// show all recipes from the fetch in InfoContainer\r\n// take recipes as props and map over them\r\nimport RecipePreview from \"./RecipePreview\"\r\n\r\nconst RecipeList = (props) => {\r\n    const {recipes, setMaterialId, setRecipeId, setRecipeListShow} = props\r\n    \r\n    if (!recipes) {\r\n        return <p>loading</p>\r\n    }\r\n\r\n    let allRecipes\r\n    allRecipes = recipes.map((recipe, index) => (\r\n        <RecipePreview key={index} recipe={recipe} setMaterialId={setMaterialId} setRecipeId={setRecipeId} setRecipeListShow={setRecipeListShow}/>\r\n    ))\r\n\r\n    return (\r\n        <div style={{display: \"flex\", flexWrap: \"wrap\"}}>\r\n            {allRecipes}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeList","// single recipe view component\r\n// shows recipe and ingredients required\r\n// will need a recipe_materials fetch in order to show quantities\r\n// also may need a inventory fetch for comparison?\r\nconst RecipeView = (props) => {\r\n    const { blueprint } = props\r\n    console.log('this is the recipe in RecipeView', blueprint)\r\n    const recipeImagePath = \"images/recipes/\" + blueprint[0].blueprint.recipe_image\r\n\r\n    let ingredients\r\n    ingredients = blueprint.map((ingredient, index) => {\r\n        const materialImagePath = \"images/materials/\" + ingredient.material.material_image\r\n        return (\r\n            <div key={index}>\r\n                <p>\r\n                    <img src={materialImagePath} title={ingredient.material.material_name} alt={ingredient.material.material_name} style={{maxWidth: \"30px\"}}/>\r\n                    {ingredient.material.material_name}: {ingredient.amount_needed}\r\n                    </p>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div style={{margin:\"5px\", paddingBottom: \"15%\", textAlign: \"center\"}}>\r\n            <h2>{blueprint[0].blueprint.recipe_name}</h2>\r\n            <div className=\"my-3\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                <div className=\"ui-container\" style={{display: \"flex\", width: \"150px\", height: \"150px\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                    <img src={recipeImagePath} alt={recipeImagePath}/>\r\n                </div>\r\n            </div>\r\n            <p>{blueprint[0].blueprint.recipe_description}</p>\r\n            {ingredients}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeView","// this absolute monster handles conditional rendering for blueprint list, single blueprint view, and single material view\r\n// will also handle editing inventory quantities, in theory\r\n// runs a wild conditional fetch depending on the state of recipeId, materialId, and showRecipeList in UserHome component\r\nimport { useEffect, useState } from \"react\"\r\nimport MaterialView from \"./MaterialView\"\r\nimport CloseButton from \"../shared/CloseButton\"\r\nimport RecipeList from \"./RecipeList\"\r\nimport RecipeView from \"./RecipeView\"\r\nimport { getAllBlueprints } from \"../../api/blueprints\"\r\n// import { getOneMaterial } from \"../../api/materials\"\r\nimport { getOneBlueprintMaterials } from \"../../api/blueprint_materials\"\r\nimport { getSingleInventory } from \"../../api/inventories\"\r\n\r\nexport const InfoContainer = (props) => {\r\n    // extract all UserHome variables from props\r\n    // user will be used once updateInventory is implemented\r\n    const {user, characterId, materialId, recipeId, invUpdated, setMaterialId, setRecipeId, recipeListShow, setRecipeListShow, setInvUpdated} = props\r\n    const [material, setMaterial] = useState(null)\r\n    const [recipeList, setRecipeList] = useState(null)\r\n    const [blueprint, setBlueprint] = useState(null)\r\n\r\n    // console.log('InfoContainer has loaded')\r\n    // console.log('props in InfoContainer', props)\r\n    useEffect(() => {\r\n        console.log('useEffect has run in InfoContainer')\r\n        // if materialId is set in state, fetch a material, otherwise set it to null\r\n        // this is in case the user jumps straight from looking at a material to looking at a recipe, for example\r\n        if (materialId) {\r\n            console.log('this is an inventory fetch')\r\n            getSingleInventory(user, characterId, materialId)\r\n                .then(res => setMaterial(res.data.inventory))\r\n                .catch(err => console.log(err))\r\n        } else {\r\n            setMaterial(null)\r\n        }\r\n        // do the same for recipe Id\r\n        if (recipeId) {\r\n            console.log('this is a blueprint fetch')\r\n            getOneBlueprintMaterials(recipeId)\r\n                .then(res => setBlueprint(res.data.recipe_materials))\r\n                .catch(err => console.log(err))\r\n        } else {\r\n            setBlueprint(null)\r\n        }\r\n        // recipeListShow determines if we show all recipes\r\n        // that component handles its own visibility so no need to set state here\r\n        if (recipeListShow) {\r\n            getAllBlueprints()\r\n                .then(res => setRecipeList(res.data.blueprints))\r\n                .catch(err => console.log(err))\r\n        }\r\n    // eslint-disable-next-line\r\n    }, [recipeListShow, invUpdated, materialId, recipeId])\r\n\r\n    const divStyle = {\r\n        width: \"100%\",\r\n    }\r\n    if (material) {\r\n        return (\r\n            <div className=\"ui-container animated\" style={divStyle}>\r\n                <CloseButton\r\n                handleClose={() => {\r\n                    setMaterialId(null)\r\n                    setRecipeId(null)\r\n                    setRecipeListShow(false)}}\r\n                />\r\n                    <MaterialView user={user} inventory={material} characterId={characterId} setInvUpdated={setInvUpdated}/>\r\n            </div>\r\n        )\r\n    } else if (blueprint) {\r\n        return (\r\n            <div className=\"ui-container animated\" style={divStyle}>\r\n                <CloseButton\r\n                handleClose={() => {\r\n                    setMaterialId(null)\r\n                    setRecipeId(null)\r\n                    setRecipeListShow(false)}}\r\n                />\r\n                <RecipeView characterId={characterId} blueprint={blueprint} setRecipeId={setRecipeId} setMaterialId={setMaterialId} setRecipeListShow={setRecipeListShow}/>\r\n            </div>\r\n        )\r\n    } else if (recipeListShow) {\r\n        return (\r\n            <div className=\"ui-container animated\" style={{maxHeight: \"100%\", overflowY: \"scroll\"}}>\r\n            <RecipeList recipes={recipeList} setMaterialId={setMaterialId} setRecipeId={setRecipeId} setRecipeListShow={setRecipeListShow}/>\r\n            </div>\r\n        )\r\n    }\r\n    // if none of those state variables are loaded, just show loading!\r\n    return (\r\n        <div className=\"ui-container animated\"\r\n            onClick={() => {\r\n                setRecipeId(null)\r\n                setMaterialId(null)\r\n                setRecipeListShow(false)\r\n            }}>\r\n            Loading\r\n        </div>\r\n    )\r\n}","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\n// get one blueprint_materials list\r\nexport const getOneBlueprintMaterials = (blueprintId) => {\r\n    console.log(`getOneBlueprintMaterials route was hit for recipe with ID ${blueprintId}`)\r\n    return axios({\r\n\t\turl: apiUrl + `/recipe_materials/${blueprintId}`,\r\n\t\tmethod: 'GET',\r\n\t})\r\n}","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\n// get all blueprints\r\nexport const getAllBlueprints = () => {\r\n    console.log('getAllBlueprints route was hit')\r\n    return axios({\r\n\t\turl: apiUrl + `/blueprints`,\r\n\t\tmethod: 'GET',\r\n\t})\r\n}\r\n\r\n// get one blueprint\r\nexport const getOneBlueprint = (blueprintId) => {\r\n    console.log(`getOneBlueprint route was hit for recipe with ID ${blueprintId}`)\r\n    return axios({\r\n\t\turl: apiUrl + `/blueprints/${blueprintId}`,\r\n\t\tmethod: 'GET',\r\n\t})\r\n}","// this beast controls conditional rendering for the three major components of the site\r\n// if a user exists, it shows the container with their character list\r\n// then renders the profile container and info container conditionally depending on user inpu\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { ProfileContainer } from './character_profiles/ProfileContainer'\r\nimport CharacterContainer from \"./characters/CharacterContainer\"\r\nimport { InfoContainer } from \"./info/InfoContainer\"\r\n\r\nconst UserHome = (props) => {\r\n    // use character, material, and recipe IDs as state objects in order to trigger rendering\r\n    // this way, components will only render if they have an id to fetch\r\n    // multiple buttons across the site will set these back to null depending on what the user has clicked on\r\n    // then the generic info components will render that requested information without having to duplicate them\r\n    const [characterId, setCharacterId] = useState(null)\r\n    const [materialId, setMaterialId] = useState(null)\r\n    const [recipeId, setRecipeId] = useState(null)\r\n    // this is also a conditional rendering variable, but for showing all recipes (since there are no ids required for that call)\r\n    const [recipeListShow, setRecipeListShow] = useState(false)\r\n    // this will (hopefully) be what triggers a refresh of the inventory in ProfileContainer after a material amount is updated in InfoContainer\r\n    const [invUpdated, setInvUpdated] = useState(false)\r\n    // this refreshes the character container if the character details are updated in the Profile Container\r\n    // this only really matters when character name is updated, so it is immediately reflected in the larger character list\r\n    const [charUpdated, setCharUpdated] = useState(false)\r\n    const user = props.user\r\n\r\n    useEffect(() => {\r\n        console.log('UserHome was refreshed')\r\n        console.log('invUpdated was changed. New value:', invUpdated)\r\n    }, [invUpdated, charUpdated])\r\n\r\n    const divStyle = {\r\n        // border: \"2px solid black\",\r\n        padding: \"10px\",\r\n        height: \"100%\"\r\n    }\r\n\r\n    return (\r\n        // if a user exists, always render the character container with their list of characters, even if it is zero\r\n        <Container fluid style={{height: \"90%\"}}>\r\n            <Row style={{height: \"100%\"}}>\r\n                <Col lg={3} style={divStyle}>\r\n                    <CharacterContainer\r\n                        user={user}\r\n                        charUpdated={charUpdated}\r\n                        setCharacterId={setCharacterId}\r\n                        setMaterialId={setMaterialId}\r\n                        setRecipeId={setRecipeId}\r\n                        setRecipeListShow={setRecipeListShow}\r\n                    />\r\n                </Col>\r\n                {/* If state is holding a character ID, that means a user has clicked on a character */}\r\n                {/* render the profile container which will fetch that one character's details for display */}\r\n                {/* otherwise, show nothing (null) */}\r\n                {\r\n                    characterId\r\n                    ?\r\n                    <Col lg={5} style={divStyle}>\r\n                        <ProfileContainer\r\n                            user={user}\r\n                            characterId={characterId}\r\n                            invUpdated={invUpdated}\r\n                            setCharacterId={setCharacterId}\r\n                            setCharUpdated={setCharUpdated}\r\n                            setMaterialId={setMaterialId}\r\n                            setRecipeId={setRecipeId}\r\n                            setRecipeListShow={setRecipeListShow}\r\n                        />\r\n                    </Col>\r\n                    :\r\n                    null\r\n                }\r\n                {/* if there is a character Id and ANY of the other conditional variables, that means the user has clicked on a button in Profile Container */}\r\n                {/* show the Info Container, which will fetch conditionally depending on which Id or show variable is held in state in this component */}\r\n                {/* otherwise, show nothing */}\r\n                {\r\n                    characterId && (materialId || recipeId || recipeListShow)\r\n                    ?\r\n                    <Col lg={4} style={divStyle}>\r\n                        <InfoContainer\r\n                            user={user}\r\n                            characterId={characterId}\r\n                            materialId={materialId}\r\n                            invUpdated={invUpdated}\r\n                            setMaterialId={setMaterialId}\r\n                            recipeId={recipeId}\r\n                            setRecipeId={setRecipeId}\r\n                            recipeListShow={recipeListShow}\r\n                            setRecipeListShow={setRecipeListShow}\r\n                            setInvUpdated={setInvUpdated}\r\n                        />\r\n                    </Col>\r\n                    :\r\n                    null\r\n                }\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UserHome","// this component is displayed when a user accesses the site but is not logged in\r\nimport { Container } from \"react-bootstrap\"\r\n\r\nconst NoUserHome = () => {\r\n    return (\r\n        // UI box with splash image\r\n        // TODO: Create splash image/logo\r\n        <Container className=\"ui-container my-5\" style={{height: \"50%\", textAlign: \"center\", alignItems: \"center\"}}>\r\n                <h2>Welcome to MyJunimo!</h2>\r\n                <p>A Stardew Valley Companion</p>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NoUserHome","// this component conditionally renders either a splash page or the user interface depending on user login status\r\nimport UserHome from \"./UserHome\"\r\nimport NoUserHome from \"./NoUserHome\"\r\nimport { Container } from \"react-bootstrap\"\r\n\r\nconst Home = (props) => {\r\n\t// const { msgAlert, user } = props\r\n\tconsole.log('props in home', props)\r\n    const {user} = props\r\n\r\n    // if the user exists, show them the whole site\r\n    if (user) {\r\n        return (\r\n            <>\r\n            <Container fluid className=\"mt-3\">\r\n                <div className=\"ui-container\"><h2>Welcome to MyJunimo!</h2></div>\r\n            </Container>\r\n                <UserHome user={user}/>\r\n            </>\r\n        )\r\n    } else {\r\n        // otherwise, just show the splash page\r\n        return (\r\n            <NoUserHome/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Home\r\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const signUp = (credentials) => {\r\n\treturn axios({\r\n\t\tmethod: 'POST',\r\n\t\turl: apiUrl + '/sign-up/',\r\n\t\tdata: {\r\n\t\t\tcredentials: {\r\n\t\t\t\temail: credentials.email,\r\n\t\t\t\tpassword: credentials.password,\r\n\t\t\t\tpassword_confirmation: credentials.passwordConfirmation,\r\n\t\t\t},\r\n\t\t},\r\n\t})\r\n}\r\n\r\nexport const signIn = (credentials) => {\r\n\treturn axios({\r\n\t\turl: apiUrl + '/sign-in/',\r\n\t\tmethod: 'POST',\r\n\t\tdata: {\r\n\t\t\tcredentials: {\r\n\t\t\t\temail: credentials.email,\r\n\t\t\t\tpassword: credentials.password,\r\n\t\t\t},\r\n\t\t},\r\n\t})\r\n}\r\n\r\nexport const signOut = (user) => {\r\n\treturn axios({\r\n\t\turl: apiUrl + '/sign-out',\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Token ${user.token}`,\r\n\t\t},\r\n\t})\r\n}\r\n\r\nexport const changePassword = (passwords, user) => {\r\n\treturn axios({\r\n\t\turl: apiUrl + '/change-password',\r\n\t\tmethod: 'PATCH',\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Token ${user.token}`,\r\n\t\t},\r\n\t\tdata: {\r\n\t\t\tpasswords: {\r\n\t\t\t\told: passwords.oldPassword,\r\n\t\t\t\tnew: passwords.newPassword,\r\n\t\t\t},\r\n\t\t},\r\n\t})\r\n}\r\n","// import React, { Component } from 'react'\r\nimport React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { signUp, signIn } from '../../api/auth'\r\nimport messages from '../shared/AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst SignUp = (props) => {\r\n\t// constructor(props) {\r\n\t// \tsuper(props)\r\n\r\n\t// \tthis.state = {\r\n\t// \t\temail: '',\r\n\t// \t\tpassword: '',\r\n\t// \t\tpasswordConfirmation: '',\r\n\t// \t}\r\n\t// }    \r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirmation, setPasswordConfirmation] = useState('')\r\n\r\n    const navigate = useNavigate()\r\n\r\n\tconst onSignUp = (event) => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst { msgAlert, setUser } = props\r\n\r\n        const credentials = {email, password, passwordConfirmation}\r\n\r\n\t\tsignUp(credentials)\r\n\t\t\t.then(() => signIn(credentials))\r\n\t\t\t.then((res) => setUser(res.data.user))\r\n\t\t\t.then(() => navigate('/'))\r\n\t\t\t.catch((error) => {\r\n                setEmail('')\r\n                setPassword('')\r\n                setPasswordConfirmation('')\r\n\t\t\t\tmsgAlert({\r\n\t\t\t\t\theading: 'Sign Up Failed with error: ' + error.message,\r\n\t\t\t\t\tmessage: messages.signUpFailure,\r\n\t\t\t\t\tvariant: 'danger',\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t}\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='col-sm-10 col-md-8 mx-auto mt-5 p-5 ui-container'>\r\n                <h3>Sign Up</h3>\r\n                <Form onSubmit={onSignUp}>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            name='email'\r\n                            value={email}\r\n                            placeholder='Enter email'\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            name='password'\r\n                            value={password}\r\n                            type='password'\r\n                            placeholder='Password'\r\n                            onChange={e => setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='passwordConfirmation'>\r\n                        <Form.Label>Password Confirmation</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            name='passwordConfirmation'\r\n                            value={passwordConfirmation}\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            onChange={e => setPasswordConfirmation(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant='primary' type='submit'>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SignUp","import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { signIn } from '../../api/auth'\r\nimport messages from '../shared/AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst SignIn = (props) => {\r\n\t// constructor(props) {\r\n\t// \tsuper(props)\r\n\r\n\t// \tthis.state = {\r\n\t// \t\temail: '',\r\n\t// \t\tpassword: '',\r\n\t// \t}\r\n\t// }\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const navigate = useNavigate()\r\n\r\n\t// handleChange = (event) =>\r\n\t// \tthis.setState({\r\n\t// \t\t[event.target.name]: event.target.value,\r\n\t// \t})\r\n\r\n\tconst onSignIn = (event) => {\r\n\t\tevent.preventDefault()\r\n        console.log('the props', props)\r\n\t\tconst { msgAlert, setUser } = props\r\n\r\n        const credentials = {email, password}\r\n\r\n\t\tsignIn(credentials)\r\n\t\t\t.then((res) => setUser(res.data.user))\r\n\t\t\t.then(() => navigate('/'))\r\n\t\t\t.catch((error) => {\r\n                setEmail('')\r\n                setPassword('')\r\n\t\t\t\tmsgAlert({\r\n\t\t\t\t\theading: 'Sign In Failed with error: ' + error.message,\r\n\t\t\t\t\tmessage: messages.signInFailure,\r\n\t\t\t\t\tvariant: 'danger',\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t}\r\n\r\n    return (\r\n        <div>\r\n            <div className='col-sm-10 col-md-8 mx-auto mt-5 p-5 ui-container'>\r\n                <h3>Sign In</h3>\r\n                <Form onSubmit={onSignIn}>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            name='email'\r\n                            value={email}\r\n                            placeholder='Enter email'\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            name='password'\r\n                            value={password}\r\n                            type='password'\r\n                            placeholder='Password'\r\n                            onChange={e => setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant='primary' type='submit' className='my-2'>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","import { useNavigate } from 'react-router-dom'\r\n\r\nimport {Button, ButtonGroup} from 'react-bootstrap'\r\n\r\nimport { signOut } from '../../api/auth'\r\n// import messages from '../shared/AutoDismissAlert/messages'\r\n\r\nconst SignOut = (props) => {\r\n\tconst { clearUser, user } = props\r\n    console.log(props)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const onSignOut = () => {\r\n\t\tsignOut(user)\r\n            .finally(() => clearUser())\r\n\t\t\t.finally(() => navigate('/'))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const onCancel = () => {\r\n        navigate('/')\r\n    }\r\n\r\n\treturn (\r\n\t\t<>\r\n            <div>\r\n                <div className='col-sm-10 col-md-8 mx-auto mt-5 p-5 ui-container' style={{textAlign: \"center\"}}>\r\n                    <h2>Are you sure you want to sign out?</h2>\r\n                    <ButtonGroup>\r\n                        <Button variant='danger' size='lg' onClick={onSignOut}>\r\n                            Sign Out\r\n                        </Button>\r\n                        <Button variant='warning' size='lg' onClick={onCancel}>\r\n                            Return\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n            </div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SignOut\r\n","import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { changePassword } from '../../api/auth'\r\nimport messages from '../shared/AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst ChangePassword = (props) => {\r\n\t// constructor(props) {\r\n\t// \tsuper(props)\r\n\r\n\t// \tthis.state = {\r\n\t// \t\toldPassword: '',\r\n\t// \t\tnewPassword: '',\r\n\t// \t}\r\n\t// }\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n\r\n    const navigate = useNavigate()\r\n\r\n\tconst onChangePassword = (event) => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst { msgAlert, user } = props\r\n        console.log('the user', user)\r\n        \r\n\r\n        const passwords = {oldPassword, newPassword}\r\n\r\n\t\tchangePassword(passwords, user)\r\n\t\t\t.then(() =>\r\n\t\t\t\tmsgAlert({\r\n\t\t\t\t\theading: 'Change Password Success',\r\n\t\t\t\t\tmessage: messages.changePasswordSuccess,\r\n\t\t\t\t\tvariant: 'success',\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.then(() => navigate('/'))\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetOldPassword('')\r\n                setNewPassword('')\r\n\t\t\t\tmsgAlert({\r\n\t\t\t\t\theading: 'Change Password Failed with error: ' + error.message,\r\n\t\t\t\t\tmessage: messages.changePasswordFailure,\r\n\t\t\t\t\tvariant: 'danger',\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t}\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='col-sm-10 col-md-8 mx-auto mt-5 p-5 ui-container'>\r\n                <h3>Change Password</h3>\r\n                <Form onSubmit={onChangePassword}>\r\n                    <Form.Group controlId='oldPassword'>\r\n                        <Form.Label>Old password</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            name='oldPassword'\r\n                            value={oldPassword}\r\n                            type='password'\r\n                            placeholder='Old Password'\r\n                            onChange={e => setOldPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='newPassword'>\r\n                        <Form.Label>New Password</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            name='newPassword'\r\n                            value={newPassword}\r\n                            type='password'\r\n                            placeholder='New Password'\r\n                            onChange={e => setNewPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant='primary' type='submit'>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangePassword","// page for creating a new character\r\nimport { useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport { createCharacter } from \"../../api/characters\"\r\nimport { createInventory } from \"../../api/inventories\"\r\nimport CharacterForm from \"../shared/CharacterForm\"\r\n\r\nconst CreateCharacter = (props) => {\r\n    const user = props.user\r\n    const navigate = useNavigate()\r\n    const [character, setCharacter] = useState({\r\n        name: '',\r\n        Platform: '',\r\n        farm_name: '',\r\n        pet_type: '',\r\n        pet_name: '',\r\n        pet_image: '',\r\n        love_interest: '',\r\n        horse_name: '',\r\n        total_g: 0,\r\n        year: 1\r\n    })\r\n\r\n    // this function handles changes in the form\r\n    // new information entered updates the corresponding key in state\r\n    const handleChange = (e) => {\r\n        setCharacter(prevCharacter => {\r\n            let value = e.target.value\r\n            const name = e.target.name\r\n\r\n            const updatedCharacter = {\r\n                [name]: value\r\n            }\r\n\r\n            return {\r\n                ...prevCharacter,\r\n                ...updatedCharacter\r\n            }\r\n        })\r\n    }\r\n\r\n    // handleSubmit function for when we send data to the backend\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        character.total_g = parseInt(character.total_g)\r\n        character.year = parseInt(character.year)\r\n        console.log('info was submitted', character)\r\n        createCharacter(user, character)\r\n            .then(res =>{\r\n                const characterId = res.data.character.id\r\n                for (let i=1; i <= 80; i++) {\r\n                    createInventory(user, i, characterId)\r\n                        // .then(res => console.log('this is the response from inventory creation', res.data))\r\n                        .catch(err => console.log(err))\r\n                }\r\n            })\r\n            .then(navigate('/'))\r\n            .catch(err => console.log(err))\r\n        \r\n        }\r\n\r\n    return (\r\n        <Container className=\"ui-container my-3\">\r\n            <CharacterForm\r\n                character={character}\r\n                handleChange={handleChange}\r\n                handleSubmit={handleSubmit}\r\n                heading=\"Create New Character\"\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CreateCharacter","// import React, { Component, Fragment } from 'react'\r\nimport React, { useState, Fragment } from 'react'\r\nimport { Route, Routes } from 'react-router-dom'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\n// import AuthenticatedRoute from './components/shared/AuthenticatedRoute'\r\nimport AutoDismissAlert from './components/shared/AutoDismissAlert/AutoDismissAlert'\r\nimport Header from './components/shared/Header'\r\nimport RequireAuth from './components/shared/RequireAuth'\r\nimport Home from './components/Home'\r\nimport SignUp from './components/auth/SignUp'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignOut from './components/auth/SignOut'\r\nimport ChangePassword from './components/auth/ChangePassword'\r\nimport CreateCharacter from './components/characters/CreateCharacter'\r\n\r\nconst App = () => {\r\n\r\n  const [user, setUser] = useState(null)\r\n  const [msgAlerts, setMsgAlerts] = useState([])\r\n\r\n  console.log('user in app', user)\r\n  console.log('message alerts', msgAlerts)\r\n  const clearUser = () => {\r\n    console.log('clear user ran')\r\n    setUser(null)\r\n  }\r\n\r\n\tconst deleteAlert = (id) => {\r\n\t\tsetMsgAlerts((prevState) => {\r\n\t\t\treturn (prevState.filter((msg) => msg.id !== id) )\r\n\t\t})\r\n\t}\r\n\r\n\tconst msgAlert = ({ heading, message, variant }) => {\r\n\t\tconst id = uuid()\r\n\t\tsetMsgAlerts(() => {\r\n\t\t\treturn (\r\n\t\t\t\t[{ heading, message, variant, id }]\r\n      )\r\n\t\t})\r\n\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Header user={user} />\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t<Route path='/' element={<Home msgAlert={msgAlert} user={user} />} />\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath='/sign-up'\r\n\t\t\t\t\t\telement={<SignUp msgAlert={msgAlert} setUser={setUser} />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath='/sign-in'\r\n\t\t\t\t\t\telement={<SignIn msgAlert={msgAlert} setUser={setUser} />}\r\n\t\t\t\t\t/>\r\n                    <Route\r\n                        path='/sign-out'\r\n                        element={\r\n                        <RequireAuth user={user}>\r\n                            <SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} />\r\n                        </RequireAuth>\r\n                        }\r\n                    />\r\n                    <Route\r\n                        path='/change-password'\r\n                        element={\r\n                        <RequireAuth user={user}>\r\n                            <ChangePassword msgAlert={msgAlert} user={user} />\r\n                        </RequireAuth>}\r\n                    />\r\n                    <Route\r\n                        path='/create-character'\r\n                        element={\r\n                            <RequireAuth user={user}>\r\n                                <CreateCharacter user={user}/>\r\n                            </RequireAuth>\r\n\r\n                        }   \r\n                    />\r\n\t\t\t\t</Routes>\r\n\t\t\t\t{msgAlerts.map((msgAlert) => (\r\n\t\t\t\t\t<AutoDismissAlert\r\n\t\t\t\t\t\tkey={msgAlert.id}\r\n\t\t\t\t\t\theading={msgAlert.heading}\r\n\t\t\t\t\t\tvariant={msgAlert.variant}\r\n\t\t\t\t\t\tmessage={msgAlert.message}\r\n\t\t\t\t\t\tid={msgAlert.id}\r\n\t\t\t\t\t\tdeleteAlert={deleteAlert}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</Fragment>\r\n\t\t)\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './App.scss';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { ThemeProvider } from 'react-bootstrap';\r\n// import 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n    <ThemeProvider\r\n        breakpoints={['xxxl', 'xxl', 'xl', 'lg', 'md', 'sm', 'xs', 'xxs']}\r\n        minBreakpoint=\"xxs\"\r\n    >\r\n        <App />\r\n    </ThemeProvider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n","const messages = {\r\n\tsignUpSuccess: \"Successfully registered! You've been signed in as well.\",\r\n\tsignUpFailure:\"Registration failed. Email may be taken, or passwords don't match.\",\r\n\tsignInSuccess: 'Welcome!',\r\n\tsignInFailure:'Failed to sign in. Check your email and password and try again.',\r\n\tsignOutSuccess: 'Come back soon!',\r\n\tchangePasswordSuccess: 'Password changed successfully!',\r\n\tchangePasswordFailure:'Failed to change passwords. Check your old password and try again.',\r\n}\r\n\r\nmodule.exports = messages"],"sourceRoot":""}